/* this file is generated by the build system */
#define TESTNAME blank
#define TEST() static gchar * TESTNAME (void)
#include "tests/blank.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_abyss
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_abyss.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_lower_left
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_lower_left.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_lower_right
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_lower_right.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_self
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_self.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_upper_left
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_upper_left.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_copy_upper_right
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_copy_upper_right.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_copy1
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_copy1.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_copy2
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_copy2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_delete1
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_delete1.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_delete2
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_delete2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_write1
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_write1.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_write2
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_write2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_write3
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_write3.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_dup_write4
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_dup_write4.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator1
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator1.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator1sub
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator1sub.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator2
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator2sub
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator2sub.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator3
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator3.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator3sub
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator3sub.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator4
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator4.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_iterator4sub
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_iterator4sub.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_linear_copy
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_linear_copy.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_linear_iter2
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_linear_iter2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_linear_iter
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_linear_iter.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_multcopy
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_multcopy.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_set_pattern
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_set_pattern.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_shift_diagonal
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_shift_diagonal.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_shift_horizontal
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_shift_horizontal.c"
#undef TESTNAME
#undef TEST
#define TESTNAME buffer_shift_vertical
#define TEST() static gchar * TESTNAME (void)
#include "tests/buffer_shift_vertical.c"
#undef TESTNAME
#undef TEST
#define TESTNAME checks
#define TEST() static gchar * TESTNAME (void)
#include "tests/checks.c"
#undef TESTNAME
#undef TEST
#define TESTNAME disabled_abyss
#define TEST() static gchar * TESTNAME (void)
#include "tests/disabled_abyss.c"
#undef TESTNAME
#undef TEST
#define TESTNAME dup_linear_from_data
#define TEST() static gchar * TESTNAME (void)
#include "tests/dup_linear_from_data.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_black
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_black.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_clamp
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_clamp.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_empty_buffer
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_empty_buffer.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_loop
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_loop.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_none
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_none.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_abyss_white
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_abyss_white.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_buffer_scaled2
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_buffer_scaled2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_buffer_scaled
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_buffer_scaled.c"
#undef TESTNAME
#undef TEST
#define TESTNAME get_shifted
#define TEST() static gchar * TESTNAME (void)
#include "tests/get_shifted.c"
#undef TESTNAME
#undef TEST
#define TESTNAME gray
#define TEST() static gchar * TESTNAME (void)
#include "tests/gray.c"
#undef TESTNAME
#undef TEST
#define TESTNAME grow_extent
#define TEST() static gchar * TESTNAME (void)
#include "tests/grow_extent.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_from_data
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_from_data.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_from_data_rows
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_from_data_rows.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_modify
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_modify.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_new
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_new.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_proxy_modify
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_proxy_modify.c"
#undef TESTNAME
#undef TEST
#define TESTNAME linear_shift
#define TEST() static gchar * TESTNAME (void)
#include "tests/linear_shift.c"
#undef TESTNAME
#undef TEST
#define TESTNAME mipmap_iterator2
#define TEST() static gchar * TESTNAME (void)
#include "tests/mipmap_iterator2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME mipmap_iterator
#define TEST() static gchar * TESTNAME (void)
#include "tests/mipmap_iterator.c"
#undef TESTNAME
#undef TEST
#define TESTNAME mipmap_sampler
#define TEST() static gchar * TESTNAME (void)
#include "tests/mipmap_sampler.c"
#undef TESTNAME
#undef TEST
#define TESTNAME mipmap_set2
#define TEST() static gchar * TESTNAME (void)
#include "tests/mipmap_set2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME mipmap_set
#define TEST() static gchar * TESTNAME (void)
#include "tests/mipmap_set.c"
#undef TESTNAME
#undef TEST
#define TESTNAME rect
#define TEST() static gchar * TESTNAME (void)
#include "tests/rect.c"
#undef TESTNAME
#undef TEST
#define TESTNAME sample
#define TEST() static gchar * TESTNAME (void)
#include "tests/sample.c"
#undef TESTNAME
#undef TEST
#define TESTNAME save_small_roi
#define TEST() static gchar * TESTNAME (void)
#include "tests/save_small_roi.c"
#undef TESTNAME
#undef TEST
#define TESTNAME sub_rect_fills_and_gets
#define TEST() static gchar * TESTNAME (void)
#include "tests/sub_rect_fills_and_gets.c"
#undef TESTNAME
#undef TEST
#define TESTNAME sub_sub_fill2
#define TEST() static gchar * TESTNAME (void)
#include "tests/sub_sub_fill2.c"
#undef TESTNAME
#undef TEST
#define TESTNAME sub_sub_fill
#define TEST() static gchar * TESTNAME (void)
#include "tests/sub_sub_fill.c"
#undef TESTNAME
#undef TEST
#define TESTNAME vertical_gradient
#define TEST() static gchar * TESTNAME (void)
#include "tests/vertical_gradient.c"
#undef TESTNAME
#undef TEST
typedef gchar *(*TestFunc) ();TestFunc tests[]={
blank,
buffer_copy_abyss,
buffer_copy,
buffer_copy_lower_left,
buffer_copy_lower_right,
buffer_copy_self,
buffer_copy_upper_left,
buffer_copy_upper_right,
buffer_dup_copy1,
buffer_dup_copy2,
buffer_dup_delete1,
buffer_dup_delete2,
buffer_dup_write1,
buffer_dup_write2,
buffer_dup_write3,
buffer_dup_write4,
buffer_iterator1,
buffer_iterator1sub,
buffer_iterator2,
buffer_iterator2sub,
buffer_iterator3,
buffer_iterator3sub,
buffer_iterator4,
buffer_iterator4sub,
buffer_linear_copy,
buffer_linear_iter2,
buffer_linear_iter,
buffer_multcopy,
buffer_set_pattern,
buffer_shift_diagonal,
buffer_shift_horizontal,
buffer_shift_vertical,
checks,
disabled_abyss,
dup_linear_from_data,
get_abyss_black,
get_abyss_clamp,
get_abyss_empty_buffer,
get_abyss_loop,
get_abyss_none,
get_abyss_white,
get_buffer_scaled2,
get_buffer_scaled,
get_shifted,
gray,
grow_extent,
linear_from_data,
linear_from_data_rows,
linear_modify,
linear_new,
linear_proxy_modify,
linear_shift,
mipmap_iterator2,
mipmap_iterator,
mipmap_sampler,
mipmap_set2,
mipmap_set,
rect,
sample,
save_small_roi,
sub_rect_fills_and_gets,
sub_sub_fill2,
sub_sub_fill,
vertical_gradient,
};
static gchar *test_names[]={
"blank",
"buffer_copy_abyss",
"buffer_copy",
"buffer_copy_lower_left",
"buffer_copy_lower_right",
"buffer_copy_self",
"buffer_copy_upper_left",
"buffer_copy_upper_right",
"buffer_dup_copy1",
"buffer_dup_copy2",
"buffer_dup_delete1",
"buffer_dup_delete2",
"buffer_dup_write1",
"buffer_dup_write2",
"buffer_dup_write3",
"buffer_dup_write4",
"buffer_iterator1",
"buffer_iterator1sub",
"buffer_iterator2",
"buffer_iterator2sub",
"buffer_iterator3",
"buffer_iterator3sub",
"buffer_iterator4",
"buffer_iterator4sub",
"buffer_linear_copy",
"buffer_linear_iter2",
"buffer_linear_iter",
"buffer_multcopy",
"buffer_set_pattern",
"buffer_shift_diagonal",
"buffer_shift_horizontal",
"buffer_shift_vertical",
"checks",
"disabled_abyss",
"dup_linear_from_data",
"get_abyss_black",
"get_abyss_clamp",
"get_abyss_empty_buffer",
"get_abyss_loop",
"get_abyss_none",
"get_abyss_white",
"get_buffer_scaled2",
"get_buffer_scaled",
"get_shifted",
"gray",
"grow_extent",
"linear_from_data",
"linear_from_data_rows",
"linear_modify",
"linear_new",
"linear_proxy_modify",
"linear_shift",
"mipmap_iterator2",
"mipmap_iterator",
"mipmap_sampler",
"mipmap_set2",
"mipmap_set",
"rect",
"sample",
"save_small_roi",
"sub_rect_fills_and_gets",
"sub_sub_fill2",
"sub_sub_fill",
"vertical_gradient",
};
